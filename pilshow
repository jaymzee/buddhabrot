#!/usr/bin/env python

"""
pilshow converts a text file to a PNG image using the Pillow library

use this for generating grayscale images and
for displaying with the default image viewer
"""

import sys
import os
import numpy as np
from PIL import Image
from MyImage.arrayutils import load_array, clip_array


def print_usage():
    print('Usage: pilshow [options] filename')
    print('Options:')
    print('    -t         transpose image')
    print('    -m255      set upper bound on magnitude')


def main():
    in_filename = None
    clip_threshold = None
    transpose = False

    # process command line arguments
    for arg in sys.argv[1:]:
        if arg[:2] == '-t':
            transpose = True
        elif arg[:2] == '-m':
            clip_threshold = int(arg[2:])
        elif arg[:1] != '-' and in_filename is None:
            in_filename = arg
        else:
            print_usage()
            sys.exit(1)

    if in_filename is None:
        print_usage()
        sys.exit(1)

    # read and process input file
    try:
        arr = load_array(in_filename)
    except IOError as err:
        print(err)
        sys.exit(1)

    if clip_threshold:
        arr = clip_array(arr, clip_threshold)

    # rescale to 255 levels of gray
    max_intensity = np.max(arr)
    arr = arr * 255.0 / max_intensity

    if transpose:
        arr = arr.T

    # display image momentarily
    img = Image.fromarray(arr)
    img.show()

    # write PNG image
    out_basename, _ = os.path.splitext(in_filename)
    out_filename = out_basename + ".png"
    print("writing PNG image to %s" % out_filename)
    img_lum = img.convert("L")
    img_lum.save(out_filename)


if __name__ == "__main__":
    main()
